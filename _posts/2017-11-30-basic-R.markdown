---
layout: post
title: "[R 기초]일단 한번 따라해 봅시다"
date: 2017-11-30
categories:
  - R
description:
image: https://images.unsplash.com/photo-1461749280684-dccba630e2f6?auto=format&fit=crop&w=1050&q=80&ixid=dW5zcGxhc2guY29tOzs7Ozs%3D
image-sm: https://images.unsplash.com/photo-1461749280684-dccba630e2f6?auto=format&fit=crop&w=1050&q=80&ixid=dW5zcGxhc2guY29tOzs7Ozs%3D
---

R 뿐만 아니라 모든 것에 있어 찬찬히 하나하나 배우는 것이 가장 좋겠지만 때로는 일단 한번 시작 해보는 것이 도움이 되기도 합니다. R studio의 Console 창에 아래 코드들을 하나하나 입력해 보면서 R언어를 **직관적으로** 알아봅시다.  

본 포스팅은 대학원 생물통계학 수업의 강의자료입니다. 예제로 사용한 코드 및 데이터(엑셀, csv)는 [여기](https://github.com/YoungjunNa/2017_advanced_biological_statics)에 있습니다.  



### 0. 참고할 문서(Cheatsheets)
1. [R 기본](http://github.com/rstudio/cheatsheets/raw/master/base-r.pdf)
2. [데이터 가공](https://github.com/rstudio/cheatsheets/raw/master/data-transformation.pdf)
3. [데이터 시각화](https://github.com/rstudio/cheatsheets/raw/master/data-visualization-2.1.pdf)
4. [연동형 문서 작성](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)


#### 1. 일단 따라해봅시다
[R 기본](http://github.com/rstudio/cheatsheets/raw/master/base-r.pdf)에 링크된 pdf 파일을 함께 봐 주세요

#### 1.1. 정의하기
> a<-10   #a는 10입니다.  
> b<-5  #b는 5입니다.  
> c<-"animal"   #c는 animal입니다.  
> #주의: 변수 이름은 문자로 시작해야합니다.  

#### 1.2. 출력하기
> a  
> b  
> c  

#### 1.3. 사칙연산
> a+b #더하기  
> a-b #빼기  
> a/b #나누기  
> a*b #곱하기  
> a^2 #제곱  
> sqrt(a^2) #루트  

#### 1.4. 논리
> a==b #a는 b와 같다.  
> a!=b #a는 b와 같지 않다.  
> a>b #a는 b보다 크다.  
> a<b #a는 b보다 작다.  
> a>=b #a는 b보다 크거나 같다.  
> a<=b #a는 b보다 작거나 같다.  

#### 1.5. 데이터프레임  
> a<-1:10  
> a  

> b<-c(1,2,3,4,5,10)  
> b

> c<-c("Konkuk","University")  
> c  
> #c는 '합치다'라는 뜻의 'combine'의 약자입니다.  

> example<-data.frame(name=c("철수","영희","건이"), sex=c("Male","Female","Male"),age=c(29,40,33), height=c(175,163,168))  
> example  

> #example 데이터 중 height 데이터만 추출  
> x<-example$height  
> x  

> example[2,3]  
> example[3,3]  
> example[,3]  
> example[1,]  
> example[-1,]  
> example[c(2,3),]  

#### 1.6. 기본 통계
> sum(x)  #합계  
> mean(x)   #평균  
> median(x)   #중간값  
> var(x)  #분산  
> sd(x)   #표준편차  
> max(x)  #최대값  
> min(x)  #최소값  
> range(x)  #범위  

### 2. 기초 R 문법
#### 2.1. Working directory 확인  
> getwd()  

#### 2.2. Working directory 설정
> setwd("/Users/Youngjun/Google Drive/wd")  
> #R studio > Tools > Global option > Default working directory 에서 바꿀수도 있습니다.  

#### 2.3. Working directory 안에 있는 파일 확인
> dir()  

#### 2.4. 패키지 인스톨
> install.packages("dplyr")  
> install.packages("ggplot2")  
> install.packages("readxl")  

#### 2.5. 패키지 업데이트
> update.packages(ask=FALSE)  

#### 2.6. 패키지 로딩
> library(dplyr)  
> library(ggplot2)  

#### 2.7. 파일 읽기
위에서 설정한 working directory 폴더에 [github](https://github.com/YoungjunNa/2017_advanced_biological_statics)에서 다운받은 dataframe.csv 파일과 example_df.xlsx 파일이 존재해야 합니다.

> read.csv("dataframe.csv")  
> readxl::read_excel("example_df.xlsx")  

#### 2.8. 파일 쓰기
> write.csv(example, "test.txt", row.names=FALSE)  

### 3. 데이터 가공: dplyr 패키지
[데이터 가공](https://github.com/rstudio/cheatsheets/raw/master/data-transformation.pdf)에 링크된 pdf 파일을 함께 봐 주세요  

#### 3.0. 패키지 로딩 및 데이터 읽기
> library(dplyr)  
> readxl::read_excel("example_df.xlsx")  
> df<-readxl::read_excel("example_df.xlsx")  

#### 3.1. 필요한 데이터만 추출하기: filter
> filter(df, Name=="Kim")  
> filter(df, weight > 500)  
> filter(df, wgrade != "C")  
> filter(df, qgrade != "3")  
> filter(df, qgrade=="1++" & wgrade=="A")   #and  
> filter(df, qgrade=="1++" | wgrade=="A")   #or  

#### 3.2. 파이프 함수의 사용: %>%  
x %>% f(y) 는 f(x,y)를 의미합니다.  
> df$month %>% mean()  
> mean(df$month)  

#### 3.3. 그룹 분석: group_by
> group_by(df, Name) %>% summarise(avg=mean(month))  
> group_by(df, Name) %>% summarise(month=mean(month), mean_weight=mean(weight), max_weight=max(weight))  
> group_by(df, qgrade) %>% summarise(month=mean(month))  

### 4. 시각화: ggplot2 패키지
[데이터 시각화](https://github.com/rstudio/cheatsheets/raw/master/data-visualization-2.1.pdf)에 링크된 pdf 파일을 함께 봐 주세요

#### 4.0. 패키지 로딩
> library(ggplot2)  

#### 4.1. 메인 데이터셋 지정: ggplot(data=df, aes(x,y))
> g<-ggplot(df, aes(x=month,y=weight))  
> g  

#### 4.2. 산점도: + geom_point()
> g + geom_point()  

#### 4.3. 막대그래프: + geom_bar()
> h<-ggplot(df, aes(qgrade))  
> h + geom_bar()  
> h + geom_bar() + scale_x_discrete(limits=c("3","2","1","1+","1++")) #순서 지정하기  
> h + geom_bar(width=0.5, fill="red") + scale_x_discrete(limits=c("3","2","1","1+","1++")) #너비 및 색 지정  

#### 4.4. 분포도 그리기: + geom_density()
> g<-ggplot(df, aes(month))  
> g + geom_density(kernel="gaussian")  

### 5. dplyr + ggplot
> filter(df, month<40) %>% ggplot(aes(month)) + geom_density(kernel="gaussian") #40개월 미만의 개체의 분포도  
> filter(df, Name=="Kim") %>% ggplot(aes(wgrade)) + geom_bar(width=0.4, fill="#81BEF7") + coord_flip() #김씨네 육량등급  

html 컬러 차트: https://html-color-codes.info/Korean/

### 6. 연동형 문서 작성: R 마크다운
 [데이터 시각화](https://github.com/rstudio/cheatsheets/raw/master/data-visualization-2.1.pdf)에 링크된 pdf 파일을 함께 봐 주세요

마크다운 문법의 기본은 다음 [링크](https://gist.github.com/ihoneymon/652be052a0727ad59601)에 자세히 설명되어 있습니다.  
물론 사람마다 평가하는 기준이 다르겠지만 **보고서로 예술 작품을 만들 필요는 없습니다.** 보고서는 정보 전달이 목적이기 때문이죠. R 마크다운은 기존의 마크다운 + R 코드를 문서 내에서 재현 할 수 있습니다. 즉 기본 데이터가 변하더라도 한번 코드로 설정해 놓은 경우 데이터 프레임의 형식만 잘 맞춰준다면 같은 형식의 보고서를 빠르게 작성할 수 있다는 말이 되겠죠.

# 7. 결론
기본적인 R 사용법을 배워보았습니다. 비록 각자가 다뤄야 하는 데이터의 종류와 성격이 다르겠지만 기본적으로 데이터를 **가공하고-분석하고-해석하는** 일련의 과정들은 다르지 않을 것이라 생각합니다. 분석 및 보고서 작성과정에 들이는 시간을 줄일 수 있길 바래봅니다.  
